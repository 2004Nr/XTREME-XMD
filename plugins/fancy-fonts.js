const axios = require("axios");
const { cmd } = require("../command");

cmd({
  pattern: "fancy",
  alias: ["font", "style"],
  react: "‚òëÔ∏è",
  desc: "Convert text into various fonts.",
  category: "tools",
  filename: __filename
}, async (conn, m, store, { from, quoted, args, q, reply }) => {
  try {
    if (!q) {
      return reply("*_‚ùé ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥õ·¥áx·¥õ ·¥õ·¥è ·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ …™…¥·¥õ·¥è “ì·¥Ä…¥·¥Ñ è “ì·¥è…¥·¥õs_*\n\n*·¥áx·¥Ä·¥ç·¥ò ü·¥á:* .“ì·¥Ä…¥·¥Ñ è x·¥õ Ä·¥á·¥ç·¥á");
    }

    const apiUrl = `https://www.dark-yasiya-api.site/other/font?text=${encodeURIComponent(q)}`;
    const response = await axios.get(apiUrl);
    
    if (!response.data.status) {
      return reply("_*‚ùå ·¥á Ä Ä·¥è Ä “ì·¥á·¥õ·¥Ñ ú…™…¥…¢ “ì·¥è…¥·¥õs. ·¥ò ü·¥á·¥Äs·¥á ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥  ü·¥Ä·¥õ·¥á Ä*_");
    }

    const fonts = response.data.result.map(item => `*${item.name}:*\n${item.result}`).join("\n\n");
    const resultText = `‚ùÑÔ∏è *“ì·¥Ä…¥·¥Ñ è “ì·¥è…¥·¥õs ·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ·¥á Ä* üí´\n\n${fonts}\n\n> *_·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò Ä…™…¥·¥Ñ·¥á x·¥õ Ä·¥á·¥ç·¥á_*`;

    await conn.sendMessage(from, { text: resultText }, { quoted: m });
  } catch (error) {
    console.error("*‚ùå ·¥á Ä Ä·¥è Ä …™…¥ “ì·¥Ä…¥·¥Ñ è ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö:*", error);
    reply("*‚ö†Ô∏è ·¥Ä…¥ ·¥á Ä Ä·¥è Ä ·¥è·¥Ñ·¥Ñ·¥ú Ä Ä·¥á·¥Ö ·¥° ú…™ ü·¥á “ì·¥á·¥õ·¥Ñ ú…™…¥…¢ “ì·¥è…¥·¥õs*");
  }
});
